apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  annotations:
    definition.oam.dev/alias: cdn
    definition.oam.dev/description: AWS CloudFront distribution customized for serving images from S3
  name: cloudfront-distribution
spec:
  schematic:
    cue:
      template: |
        output: {
        	apiVersion: "aws.crossplane.io/v1beta1"
        	kind:       "Composition"
        	metadata: name: "s3-cloudfront-distribution"
        	spec: {
        		compositeTypeRef: {
        			apiVersion: "aws-service/v1"
        			kind:       "CDN"
        		}
        		resources: [
        			{
        				name: "s3-bucket"
        				base: {
        					apiVersion: "s3.aws.crossplane.io/v1beta1"
        					kind:       "Bucket"
        					spec: {
        						forProvider: {
        							acl:    "private"
        							region: context.region
        						}
        						providerConfigRef: name: "aws-provider"
        					}
        				}
        			},
        			{
        				name: "origin-access-identity"
        				base: {
        					apiVersion: "cloudfront.aws.crossplane.io/v1alpha1"
        					kind:       "CloudFrontOriginAccessIdentity"
        					spec: {
        						forProvider: comment:    "OAI for S3 bucket access"
        						providerConfigRef: name: "aws-provider"
        					}
        				}
        			},
        			{
        				name: "cloudfront-distribution"
        				base: {
        					apiVersion: "cloudfront.aws.crossplane.io/v1alpha1"
        					kind:       "Distribution"
        					spec: {
        						forProvider: distributionConfig: {
        							enabled:       true
        							httpVersion:   "http2"
        							isIPV6Enabled: true
        							origins: [{
        								domainName: "\($.resources[0].status.atProvider.regionDomainName)"
        								id:         "S3Origin"
        								s3OriginConfig: originAccessIdentity: "\($.resources[1].status.atProvider.id)"
        							}]
        							defaultCacheBehavior: {
        								allowedMethods: [
        									"GET",
        									"HEAD",
        								]
        								cachedMethods: [
        									"GET",
        									"HEAD",
        								]
        								targetOriginId:       "S3Origin"
        								viewerProtocolPolicy: "redirect-to-https"
        								minTTL:               0
        								defaultTTL:           3600
        								maxTTL:               86400
        								compress:             true
        								forwardedValues: {
        									queryString: false
        									cookies: forward: "none"
        								}
        							}
        							viewerCertificate: cloudFrontDefaultCertificate: true
        						}
        						providerConfigRef: name: "aws-provider"
        					}
        				}
        			},
        		]
        	}
        }
  workload:
    definition:
      apiVersion: aws-service/v1
      kind: cdn

