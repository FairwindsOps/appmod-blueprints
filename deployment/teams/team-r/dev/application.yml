apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: rust-app
spec:
  components:
    - name: dynamodb-table
      type: dynamodb-table
      properties:
        tableName: rust-service-table
        partitionKeyName: partition_key
        sortKeyName: sort_key 
        region: us-west-2
      traits:
        - type: component-iam-policy
          properties:
            service: dynamodb
    - name: rust-service-account
      type: dp-service-account
      properties:
        componentNamesForAccess:
          - dynamodb-table
        clusterName: modernengg-dev
        clusterRegion: us-west-2
        dependsOn:
          - dynamodb-table
    - name: rust-backend
      type: appmod-service
      properties:
        image:  891612574912.dkr.ecr.us-west-2.amazonaws.com/modernengg/rust-microservice:latest
        image_name: rust-microservice
        port: 80
        targetPort: 8080
        replicas: 5
        serviceAccount: "rust-service-account"
        dummyTestVariable: "test-#" # (Optional) If changed and applied changes it can trigger a rollout for testing.
        functionalMetric:
          evaluationCriteria: [
            {
              interval: "1s", # user needs to add s, m, or h next to the number (second, minute, hour).
              count: 1,
              function: "sum", # Optional from list of "sum" | "avg" | "max" | "min" | "count"
              successOrFailCondition: "success", # "success" or "fail" as options.
              metric: "rocket_http_requests_total", # Required and is case and format sensitive.
              comparisonType: ">", # Options ">" | ">=" | "<" | "<=" | "==" | "!="
              threshold: 0
            },
            {
              interval: "1s", 
              successOrFailCondition: "success",
              function: "avg",
              metric: "rocket_http_requests_duration_seconds_sum",
              comparisonType: ">",
              threshold: 0
            },
            {
              interval: "1s", 
              count: 1,
              successOrFailCondition: "success",
              function: "max",
              metric: "rocket_http_requests_duration_seconds_count",
              comparisonType: ">",
              threshold: 0
            },
            {
              interval: "1s", 
              count: 1,
              function: "count",
              successOrFailCondition: "success",
              metric: "rocket_http_requests_duration_seconds_bucket",
              comparisonType: ">",
              threshold: 0
            },
            {
              interval: "1s", 
              count: 1,
              successOrFailCondition: "fail",
              metric: "rocket_http_requests_total",
              comparisonType: "<",
              threshold: 0
            }
          ]
        # performanceGate:
        #   pause: "10s"
        #   image: "public.ecr.aws/i8e1q7x5/javaperftest:latest"
        #   extraArgs: "160"
        #functionalGate:
        #  pause: "10s" 
        #  image: "public.ecr.aws/i8e1q7x5/appmod-javafunctest:latest"
        #  extraArgs: "red"
      dependsOn:
        - rust-service-account
      traits: 
        - type: path-based-ingress
          properties:
            domain: "*.elb.us-west-2.amazonaws.com"
            rewritePath: true 
            http:
              /rust-app: 80